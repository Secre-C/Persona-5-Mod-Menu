import("PlayerModel.msg");

void PlayerModelMenu()
{
    while (true && !PAD_CHK_PRESS(PadButton.L2))
    {
        int selection = DescriptionMenu(Title_PlayerModel, Options_PlayerModel);
        switch (selection)
        {
            case -1:
                return;
            case 0:
                PlayerSetFieldModel();
                break;
            case 1:
                PlayerSetModelScale();
                break;
            case 2:
                PlayerAttachItemModel();
                break;
        }
    }
}

void PlayerSetFieldModel()
{
    int modelStart = 100000;
    int modelMiddle = NumberMenu(3, Title_JokerGMDMiddle);
    if (modelMiddle != -1)
    {
        modelMiddle *= 100;
        int modelLast = NumberMenu(2, Title_JokerGMDLast);
        if (modelLast != -1)
        {
            // Confirm entered number
            SET_COUNT(18, modelStart + modelMiddle + modelLast);

            // Reload of field to complete GMD swap
            ReloadCurrentField();
        }
    }
}

void PlayerSetModelScale()
{
    float temp = FloatMenu();
    if (temp != -1)
    {
        float modelScale = temp / 10;
        FLD_MODEL_SET_SCALE(FLD_PC_GET_RESHND(0), modelScale);
    }
}

void PlayerAttachItemModel()
{
    int itemModelMajor = NumberMenu(4, Title_JokerItemMajor);
    if (itemModelMajor == -1)
        return;
    int itemModelMinor = NumberMenu(3, Title_JokerItemMinor);
    if (itemModelMinor == -1)
        return;

    //FLD_PC_MODEL_ATTACH_ITEM( resHandle, itemModelMajor, itemModelMinor );
    int itemModel = FLD_ITEM_MODEL_LOAD(itemModelMajor, itemModelMinor);
    FLD_MODEL_LOADSYNC(itemModel);
    FLD_MODEL_SET_VISIBLE(itemModel, 1, 0);
    int joker = FLD_PC_GET_RESHND(0);

    int boneID = 0;
    while (!PAD_CHK_PRESS(PadButton.Circle))
    {
        if (PAD_CHK_PRESS(PadButton.Any))
        {
            if (PAD_CHK_PRESS(PadButton.Left))
            {
                if (boneID >= 1)
                    boneID--;
            }
            if (PAD_CHK_PRESS(PadButton.Right))
            {
                boneID++;
            }
            FLD_MODEL_ATTACH_TRANSLATE(itemModel, joker, boneID);
            FLD_MODEL_ATTACH_ROTATE(itemModel, joker, boneID);
            PUTS("Bone ID:");
            PUT(boneID);
        }
        
        SYNC();
    }

    SET_MSG_VAR(0, boneID, 0);

    MSG_WND_DSP();
    MSG(Message_BoneID, 0);
    MSG_WND_CLS();
    
}