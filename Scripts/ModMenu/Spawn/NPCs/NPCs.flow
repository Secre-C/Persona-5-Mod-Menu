import("Animation/NPCAnimation.flow");
import("NPCs.msg");

// Global Variables
global int gLastSpawnedNpcModelHandle;

void SpawnNPCsMenu()
{
    while (true && !PAD_CHK_PRESS(PadButton.L2))
    {
        int selection = DescriptionMenu(Title_SpawnNPCs, Options_SpawnNPCs);

        switch (selection)
        {
            case -1:
                return;
            case 0: // Spawn Model
                NpcSpawnSelect();
                break;
            case 1: // Animate Model
                // ./Animation/NPCAnimation.flow
                NPCAnimationMenu(gLastSpawnedNpcModelHandle);
                break;
            case 2: // Scale Model
                NpcScale();
                break;
            case 3: // Attach Item Model
                NpcAttachItemModel();
                break;
            case 4: // Spawn Object
                NpcSpawnObjectModel();
                break;
        }
    }
}

void NpcSpawnSelect()
{
    int modelIdMajor = NumberMenu(4, Title_NPCFirst);
    if (modelIdMajor == -1)
        return;

    int modelIdMinor = NumberMenu(3, Title_NPCMiddle);
    if (modelIdMinor == -1)
        return;

    int modelIdSub = NumberMenu(2, Title_NPCLast);
    if (modelIdSub == -1)
        return;

    gLastSpawnedNpcModelHandle = NpcSpawn(modelIdMajor, modelIdMinor, modelIdSub);
}

int NpcSpawn(int modelIdMajor, int modelIdMinor, int modelIdSub)
{
    int pcHandle = FLD_PC_GET_RESHND(0);
    float x = FLD_MODEL_GET_X_TRANSLATE(pcHandle);
    float y = FLD_MODEL_GET_Y_TRANSLATE(pcHandle);
    float z = FLD_MODEL_GET_Z_TRANSLATE(pcHandle);
    float xr = FLD_MODEL_GET_X_ROTATE(pcHandle);
    float yr = FLD_MODEL_GET_Y_ROTATE(pcHandle);
    float zr = FLD_MODEL_GET_Z_ROTATE(pcHandle);

    int npcHandle = FLD_NPC_MODEL_LOAD(modelIdMajor, modelIdMinor, modelIdSub);
    FLD_MODEL_LOADSYNC(npcHandle);
    TransformModel(npcHandle);

    return npcHandle;
}

void NpcScale()
{
    float temp = FloatMenu();
    if (temp == -1)
        return;
    float modelScale = temp / 10;
    FLD_MODEL_SET_SCALE(gLastSpawnedNpcModelHandle, modelScale);
}

void NpcAttachItemModel()
{
    int itemModelMajor = NumberMenu(4, Title_NPCItemMajor);
    if (itemModelMajor == -1)
        return;
    int itemModelMinor = NumberMenu(3, Title_NPCItemMinor);
    if (itemModelMinor == -1)
        return;
    int npcBoneID = NumberMenu(3, Title_NPCItemBoneID);
    if (npcBoneID == -1)
        return;
    //FLD_PC_MODEL_ATTACH_ITEM( resHandle, itemModelMajor, itemModelMinor );
    int itemModel = FLD_ITEM_MODEL_LOAD(itemModelMajor, itemModelMinor);
    FLD_MODEL_LOADSYNC(itemModel);
    FLD_MODEL_SET_VISIBLE(itemModel, 1, 0);
    FLD_MODEL_ATTACH_TRANSLATE(itemModel, gLastSpawnedNpcModelHandle, npcBoneID);
    FLD_MODEL_ATTACH_ROTATE(itemModel, gLastSpawnedNpcModelHandle, npcBoneID);
}

void NpcSpawnObjectModel()
{
    float x = FLD_MODEL_GET_X_TRANSLATE(gLastSpawnedNpcModelHandle);
    float y = FLD_MODEL_GET_Y_TRANSLATE(gLastSpawnedNpcModelHandle);
    float z = FLD_MODEL_GET_Z_TRANSLATE(gLastSpawnedNpcModelHandle);
    float xr = FLD_MODEL_GET_X_ROTATE(gLastSpawnedNpcModelHandle);
    float yr = FLD_MODEL_GET_Y_ROTATE(gLastSpawnedNpcModelHandle);
    float zr = FLD_MODEL_GET_Z_ROTATE(gLastSpawnedNpcModelHandle);

    int objModelMajor = NumberMenu(3, Title_NPCObjMajor);
    if (objModelMajor == -1)
        return;
    int objModelMinor = NumberMenu(3, Title_NPCObjMinor);
    if (objModelMinor == -1)
        return;

    int objectModel = FLD_OBJ_MODEL_LOAD(objModelMajor, objModelMinor);
    FLD_MODEL_LOADSYNC(objectModel);
    //FLD_OBJ_MODEL_LINKBG( objectModel );
    FLD_MODEL_SET_TRANSLATE(objectModel, x, y, z, 0);
    FLD_MODEL_SET_ROTATE(objectModel, xr, yr, zr, 0);
    FLD_MODEL_SYNC_TRANSLATE(objectModel);
    FLD_MODEL_SYNC_ROTATE(objectModel);
    FLD_MODEL_SET_VISIBLE(objectModel, 1, 0);
}